class Solution {
	public int[] plusOne(int[] digits) {
		int len = 0, flag = 0 ;
		for(int i = digits.length - 1; i >= 0; i--){
			if((digits[i] != 9 && i == digits.length - 1) || (digits[i] != 9 && flag == 1)){
				digits[i] += 1; flag = 0;
			}
			else if((digits[i] == 9 && flag == 1) || (digits[i] == 9 && i == digits.length - 1) ){
				digits[i] = 0; flag = 1;
			}
		}
		int[] ans = new int[digits.length + 1];// 创建新的数组并复制旧的内容
		if(flag == 1){
			System.arraycopy(digits, 0, ans, 1, digits.length);// 从第1位开始复制旧数组内容
			ans[0] = 1;// 设置进位
		}
		return flag == 1 ? ans : digits;
	}
//    public int[] plusOne(int[] digits) {
//		//错误，未注意到1 <= digits.length <= 100
//		int ans = 0, temp = 0;
//		List<Integer> dig = new ArrayList<>();
//		for(int i = 0; i < digits.length; i++){
//			//不加(int)为double
//			temp += digits[i] * (int) Math.pow(10, digits.length-1-i);
//		}
//		temp++;
//		while(temp/10 > 0){
//			dig.add(0,temp % 10); temp /= 10;
//		}
//		dig.add(0,temp % 10);
//		return dig.stream().mapToInt(Integer::intValue).toArray();  // 转换为 int[]
//    }
}

//runtime:0 ms
//memory:40.9 MB
